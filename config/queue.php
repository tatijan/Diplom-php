<?php
return [
    /*
    |--------------------------------------------------------------------------
    | Default Queue Driver
    |--------------------------------------------------------------------------
    | API очереди Laravel поддерживает целый ряд серверных частей через единый API,
    | предоставляя удобный доступ к каждому серверному интерфейсу с использованием
    | одного и того же синтаксиса для каждого. Здесь вы можете установить драйвер
    | очереди по умолчанию.
    |
    | Поддерживается: "sync", "database", "beanstalkd", "sqs", "redis", "null"
    |
    */
    'default' => env('QUEUE_DRIVER', 'sync'),
    /*
    |--------------------------------------------------------------------------
    | Queue Connections
    |--------------------------------------------------------------------------
    | Здесь вы можете настроить информацию о соединении для каждого сервера,
    | используемого вашим приложением. Конфигурация по умолчанию была добавлена
    | для каждого сервера, сопоставимого с Laravel. Вы можете добавить еще.
    */
    'connections' => [
        'sync' => [
            'driver' => 'sync',
        ],
        'database' => [
            'driver' => 'database',
            'table' => 'jobs',
            'queue' => 'default',
            'retry_after' => 90,
        ],
        'beanstalkd' => [
            'driver' => 'beanstalkd',
            'host' => 'localhost',
            'queue' => 'default',
            'retry_after' => 90,
        ],
        'sqs' => [
            'driver' => 'sqs',
            'key' => 'your-public-key',
            'secret' => 'your-secret-key',
            'prefix' => 'https://sqs.us-east-1.amazonaws.com/your-account-id',
            'queue' => 'your-queue-name',
            'region' => 'us-east-1',
        ],
        'redis' => [
            'driver' => 'redis',
            'connection' => 'default',
            'queue' => 'default',
            'retry_after' => 90,
        ],
    ],
    /*
    |--------------------------------------------------------------------------
    | Failed Queue Jobs
    |--------------------------------------------------------------------------
    | Эти параметры настраивают журнал невыполненных заданий
    | в очереди, чтобы вы могли их контролировать, какая база данных и таблица
    | используются для хранения сбойных заданий. Вы можете изменить их на любую
    | базу данных или таблицу по вашему желанию.
    */
    'failed' => [
        'database' => env('DB_CONNECTION', 'mysql'),
        'table' => 'failed_jobs',
    ],
];