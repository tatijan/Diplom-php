<?php
return [
    /*
    |--------------------------------------------------------------------------
    | Default Session Driver
    |--------------------------------------------------------------------------
    | Эта опция управляет «драйвером» сеанса по умолчанию, который будет
    | использоваться в запросах. По умолчанию мы будем использовать облегченный
    | собственный драйвер, но вы можете указать любой.
    |
    | Поддерживается: "file", "cookie", "database", "apc",
    |            "memcached", "redis", "array"
    |
    */
    'driver' => env('SESSION_DRIVER', 'file'),
    /*
    |--------------------------------------------------------------------------
    | Session Lifetime
    |--------------------------------------------------------------------------
    | Здесь вы можете указать количество минут, в течение которых сеанс должен
    | оставаться бездействующим до его окончания. Если вы хотите, чтобы срок их
    | действия истек сразу после закрытия браузера, установите эту опцию.
    |
    */
    'lifetime' => 120,
    'expire_on_close' => false,
    /*
    |--------------------------------------------------------------------------
    | Session Encryption
    |--------------------------------------------------------------------------
    | Эта опция позволяет вам легко указать, что все ваши данные сеанса должны быть
    | зашифрованы перед сохранением. Все шифрование будет выполняться автоматически
    | Laravel, и вы можете использовать сеанс как обычно
    |
    */
    'encrypt' => false,
    /*
    |--------------------------------------------------------------------------
    | Session File Location
    |--------------------------------------------------------------------------
    | При использовании собственного драйвера сеанса нужно место, где могут
    | храниться файлы сеанса. Для вас установлено значение по умолчанию, но
    | может быть указано другое местоположение. Это необходимо только для
    | файловых сессий.
    */
    'files' => storage_path('framework/sessions'),
    /*
    |--------------------------------------------------------------------------
    | Session Database Connection
    |--------------------------------------------------------------------------
    | При использовании драйверов сеансов «база данных» или «redis» вы можете
    | указать соединение, которое следует использовать для управления этими
    | сеансами. Это должно соответствовать соединению в вашей конфигурации базы данных.
    |
    */
    'connection' => null,
    /*
    |--------------------------------------------------------------------------
    | Session Database Table
    |--------------------------------------------------------------------------
    | При использовании драйвера сеанса «база данных» вы можете указать таблицу,
    | которую мы должны использовать для управления сеансами. Вот
    | значение по умолчанию, но вы можете изменить это при необходимости.
    */
    'table' => 'sessions',
    /*
    |--------------------------------------------------------------------------
    | Session Cache Store
    |--------------------------------------------------------------------------
    | При использовании драйверов сеансов "apc" или "memcached" можно указать
    | хранилище кэша, которое следует использовать для этих сеансов.
    | Это значение должно соответствовать одному из настроенных хранилищ
    | кэша приложения.
    |
    */
    'store' => null,
    /*
    |--------------------------------------------------------------------------
    | Session Sweeping Lottery
    |--------------------------------------------------------------------------
    | Некоторые драйверы сеансов должны вручную очищать свое хранилище, чтобы
    | избавиться от старых сеансов из хранилища. Вот шансы, что это произойдет
    | по заданному запросу. По умолчанию коэффициент равен 2 из 100.
    |
    */
    'lottery' => [2, 100],
    /*
    |--------------------------------------------------------------------------
    | Session Cookie Name
    |--------------------------------------------------------------------------
    | Здесь вы можете изменить имя файла cookie, используемого для идентификации
    | сеанса по идентификатору. Указанное здесь имя будет использоваться
    | каждый раз, когда структура для каждого драйвера создает новый файл
    | cookie сеанса.
    */
    'cookie' => 'laravel_session',
    /*
    |--------------------------------------------------------------------------
    | Session Cookie Path
    |--------------------------------------------------------------------------
    | Путь cookie сеанса определяет путь, по которому cookie будет считаться доступным.
    | Как правило, это будет корневой путь вашего приложения, но вы можете изменить
    | его при необходимости.
    */
    'path' => '/',
    /*
    |--------------------------------------------------------------------------
    | Session Cookie Domain
    |--------------------------------------------------------------------------
    | Здесь вы можете изменить домен файла cookie, используемого для идентификации
    | сеанса в вашем приложении. Это определит, какие домены куки доступны в вашем
    | приложении. Значение по умолчанию:
    |
    */
    'domain' => env('SESSION_DOMAIN', null),
    /*
    |--------------------------------------------------------------------------
    | HTTPS Only Cookies
    |--------------------------------------------------------------------------
    | Если для этой опции задано значение true, файлы cookie сеанса будут
    | отправляться обратно на сервер только в том случае, если в браузере
    | установлено соединение HTTPS. Это предотвратит отправку куки, когда
    | нет гарантии безопасности.
    */
    'secure' => env('SESSION_SECURE_COOKIE', false),
    /*
    |--------------------------------------------------------------------------
    | HTTP Access Only
    |--------------------------------------------------------------------------
    | Если установить для этого значения значение true, JavaScript не сможет
    | получить доступ к значению файла cookie, и файл cookie будет доступен
    | только через протокол HTTP. Можно изменить эту опцию при необходимости.
    */
    'http_only' => true,
];